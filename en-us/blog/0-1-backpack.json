{
  "filename": "0-1-backpack.md",
  "__html": "<h3>递归</h3>\n<pre><code>//\n//  main.c\n//  algorithm\n//\n//  Created by athlonreg on 17/01/2018.\n//  Copyright © 2018 athlonreg. All rights reserved.\n//\n\n#include &lt;stdio.h&gt;\n\n#define n 5\n#define c 10\n\nint weight[n]={2,2,6,5,4}, value[n]={6,3,5,4,6};\n\nint f(int i,int j){\n    int m1,m2;\n    if(i==n-1){\n        if(j&gt;=weight[i])\n            return value[i];\n        return 0;\n    }\n    if(j&lt;weight[i])\n        return f(i+1,j);\n    m1=f(i+1,j);\n    m2=f(i+1,j-weight[i])+value[i];\n    return m1&gt;m2?m1:m2;\n}\n\nint main(int argc, const char * argv[]) {\n    printf(&quot;%d\\n&quot;,f(0,c));\n    return 0;\n}\n</code></pre>\n<h3>运行结果</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/006dLY5Ily1fypv22cywpj32c01fewvf.jpg\" alt=\"\"></p>\n<h3>动态规划</h3>\n<pre><code>//\n//  main.c\n//  algorithm\n//\n//  Created by athlonreg on 17/01/2018.\n//  Copyright © 2018 athlonreg. All rights reserved.\n//\n\n#include &lt;stdio.h&gt;\n\n#define n 5\n#define c 10\n\nint weight[n]={2,2,6,5,4}, value[n]={6,3,5,4,6};\n\nint main(int argc, const char * argv[]) {\n    int s[n][c+1];\n    int i,j;\n    for(j=0;j&lt;=c;j++){\n        if(j&gt;weight[n-1])\n            s[n-1][j]=value[n-1];\n        else\n            s[n-1][j]=0;\n    }\n    for(i=n-2;i&gt;=0;i--){\n        for(j=0;j&lt;=c;j++){\n            if(j&lt;weight[i])\n                s[i][j]=s[i+1][j];\n            else\n                s[i][j]=s[i+1][j]&gt;(s[i+1][j-weight[i]]+value[i])?s[i+1][j]:(s[i+1][j-weight[i]]+value[i]);\n        }\n    }\n    printf(&quot;%d\\n&quot;,s[0][c]);\n    return 0;\n}\n</code></pre>\n<h3>运行结果</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/006dLY5Ily1fypv4po8i8j32c01fetpm.jpg\" alt=\"\"></p>\n<h3>回溯</h3>\n<pre><code>//\n//  main.c\n//  algorithm\n//\n//  Created by athlonreg on 17/01/2018.\n//  Copyright © 2018 athlonreg. All rights reserved.\n//\n\n#include &lt;stdio.h&gt;\n\n#define n 5\n#define c 10\n\nint weight[n]={2,2,6,5,4}, value[n]={6,3,5,4,6};\nint maxvalue, tempvalue, tempweight;\n\nvoid traceback(int t){\n    if(t==n){\n        if(tempvalue&gt;maxvalue)\n            maxvalue=tempvalue;\n        return;\n    }\n    if(tempweight+weight[t]&lt;=c){\n        tempweight+=weight[t];\n        tempvalue+=value[t];\n        traceback(t+1);\n        tempweight-=weight[t];\n        tempvalue-=value[t];\n    }\n    traceback(t+1);\n}\n\nint main(int argc, const char * argv[]) {\n    traceback(0);\n    printf(&quot;%d\\n&quot;,maxvalue);\n    return 0;\n}\n</code></pre>\n<h3>运行结果</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/006dLY5Ily1fyq1iqgsbfj32c01fedwn.jpg\" alt=\"\"></p>\n",
  "link": "/en-us/blog/0-1-backpack.html",
  "meta": {
    "title": "0-1背包问题",
    "copyright": "true",
    "date": "2018-01-17 16:51:25",
    "categories": "算法",
    "description": "0-1背包问题",
    "tags": "",
    "- 0-1背包问题": "",
    "- algorithm": "",
    "- 算法": "",
    "photos": "",
    "- https": "//ws1.sinaimg.cn/large/006dLY5Ily1fypv22cywpj32c01fewvf.jpg"
  }
}